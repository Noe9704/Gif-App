{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GrifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EACPC,mBAAS,cADF,mBACpCC,EADoC,KACxBC,EADwB,KAgB3C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCJlBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OADAC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAElB,sBAAKG,UAAU,6CAAf,UACI,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCNHO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbR,EADa,iDACoCS,UAAUF,GAD9C,+DAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFlB,GAAIkB,EAAIlB,GACRC,MAAMiB,EAAIjB,MACVC,IAAG,UAACgB,EAAIC,cAAL,aAAC,EAAYC,iBAAiBlB,QATtB,kBAYZc,GAZY,4CAAH,sDCKPK,EAAW,SAAC,GAAe,IAAdZ,EAAa,EAAbA,SAAa,ECHX,SAACA,GAAa,IAAD,EACXvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAZAC,qBAAW,WACPjB,EAASC,GACRiB,MAAK,SAAAC,GAEFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAInB,CAACb,IAEIc,EDPuBK,CAAanB,GAA/BU,EARuB,EAQ5BJ,KAAYO,EARgB,EAQhBA,QAGnB,OACI,qCACA,oBAAIjB,UAAU,wCAAd,SAAuDI,IACtDa,EAAU,mBAAGjB,UAAU,wCAAb,qBAAmE,KAC9E,qBAAKA,UAAU,YAAf,SAEYc,EAAOF,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIlB,aErBpB6B,EAAe,WAAK,MAEM3C,mBAAS,CAAC,cAFhB,mBAEtBQ,EAFsB,KAEXT,EAFW,KAS7B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWuB,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADJA,YCjB9BqB,IAASC,OACP,cAAE,EAAF,IACAC,SAASC,eAAe,W","file":"static/js/main.030642c6.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n    const [inputValue, setInputValue] = useState('Hola Mundo')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories =>[inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form> \r\n    )\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=BvlkizSXNuBavmjktGGndtr9GGvM8all`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n \r\n}\r\n","import { useEffect } from \"react\"\r\nimport React ,{useState} from 'react'\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\r\n\r\nexport const GrifGrid = ({category}) =>{\r\n    /*\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {//Este segmento solo se ejecuta cuando el compononente se renderea por primera vez\r\n       getGifs(category).then(imgs => setImages(imgs))\r\n    }, [category])*/\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return(\r\n        <>       \r\n        <h3 className=\"animate__animated animate__rubberBand\">{category}</h3> \r\n        {loading ? <p className=\"animate__animated animate__rubberBand\">Loading</p> : null}\r\n        <div className=\"card-grid\"> \r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ))\r\n                    }\r\n        </div>\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{  //Este segmento solo se ejecuta cuando el compononente se renderea por primera vez\r\n        getGifs( category)\r\n        .then(imgs =>{\r\n             //console.log(imgs);\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n          \r\n        })\r\n    },[category])\r\n\r\n    return state; \r\n}","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GrifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () =>{\r\n    //const categories = ['One Punch','Samuari X','Dragon Ball'];\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    /*\r\n    const handleAdd = () =>{\r\n        setCategories([...categories,'HunterXHunter']);\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>( \r\n                        <GrifGrid \r\n                        key ={category}\r\n                        category={category}/>\r\n                    ))\r\n                   \r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\nReactDOM.render(\n  < GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}